generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int        @id @default(autoincrement())
  username  String     @unique
  email     String     @unique
  password  String
  avatar    String     @default("https://i.imgur.com/6VBx3io.png") @db.VarChar(500)
  role      String     @default("user")
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  authToken String?    @unique @db.VarChar(500)
  portfolio Portfolio?
  watchlist Watchlist[]
}

model Crypto {
  id            Int             @id @default(autoincrement())
  name          String          @unique
  symbol        String          @unique
  logo          String
  description   String          @db.VarChar(500)
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  visible       Boolean         @default(true)
  cryptoData    CryptoData[]
  portfolioData PortfolioData[]
  watchlist     Watchlist[]
}

model CryptoData {
  id        Int      @id @default(autoincrement())
  cryptoId  Int
  price     Float
  timestamp BigInt
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  crypto    Crypto   @relation(fields: [cryptoId], references: [id])
}

model Article {
  id          Int      @id @default(autoincrement())
  title       String   @db.VarChar(500)
  description String   @db.VarChar(1000)
  link        String   @db.VarChar(500)
  preview     String   @db.VarChar(500)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  publishedAt DateTime
  visible     Boolean  @default(true)
}

model Watchlist {
  id        Int      @id @default(autoincrement())
  userId    Int      
  cryptoId  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  crypto    Crypto   @relation(fields: [cryptoId], references: [id])
}

model Portfolio {
  id            Int             @id @default(autoincrement())
  userId        Int             @unique
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  user          User            @relation(fields: [userId], references: [id])
  portfolioData PortfolioData[]
}

model PortfolioData {
  id          Int       @id @default(autoincrement())
  portfolioId Int
  userId      Int
  cryptoId    Int
  price       Float
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  crypto      Crypto    @relation(fields: [cryptoId], references: [id])
  portfolio   Portfolio @relation(fields: [portfolioId], references: [id])
}

model RssFeed {
  id        Int      @id @default(autoincrement())
  link      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime
}
